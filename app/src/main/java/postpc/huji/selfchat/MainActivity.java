package postpc.huji.selfchat;

import android.support.v4.app.FragmentTransaction;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.support.v7.widget.LinearLayoutManager;
import android.support.v7.widget.RecyclerView;
import android.util.Log;
import android.view.View;
import android.widget.TextView;

import java.util.ArrayList;
import java.util.List;

public class MainActivity extends AppCompatActivity {
    private RecyclerView mRecyclerView;
    private RecyclerAdapter mAdapter;
    private RecyclerView.LayoutManager mLayoutManager;
    private View mButton;
    private TextView mInput;
    private List<Message> mMessages;
    private Boolean exit = false;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        mButton = findViewById(R.id.submit_button);
        mInput = findViewById(R.id.input);

        initRecyclerView();

        mButton.setOnClickListener(new View.OnClickListener() {
            public void onClick(View v) {
                if (mInput.getText().length() > 0) {
                    Message newMsg = new Message("אוהד", mInput.getText().toString());
                    mMessages.add(newMsg);
                    mAdapter.notifyDataSetChanged();
                    mInput.setText(null);
                }
            }
        });

        // Check that the activity is using the layout version with
        // the fragment_container FrameLayout
        if (findViewById(R.id.fragment_container) != null) {

            // However, if we're being restored from a previous state,
            // then we don't need to do anything and should return or else
            // we could end up with overlapping fragments.
            if (savedInstanceState != null) {
                return;
            }

            // Create a new Fragment to be placed in the activity layout
            MessageFragment firstFragment = new MessageFragment();

            // In case this activity was started with special instructions from an
            // Intent, pass the Intent's extras to the fragment as arguments
            firstFragment.setArguments(getIntent().getExtras());

            // Add the fragment to the 'fragment_container' FrameLayout
            getSupportFragmentManager().beginTransaction()
                    .add(R.id.fragment_container, firstFragment).commit();
        }
    }

    private void initRecyclerView() {
        mMessages = new ArrayList<>();
        mRecyclerView = findViewById(R.id.recyclerView);
        mLayoutManager = new LinearLayoutManager(this);
        mRecyclerView.setLayoutManager(mLayoutManager);
        mAdapter = new RecyclerAdapter(mMessages);
        mRecyclerView.setAdapter(mAdapter);
        mAdapter.setOnItemClickListener(new RecyclerAdapter.ClickListener() {
            @Override
            public void onItemClick(int position, View v) {
                Log.d("short click", "onItemClick position: " + position);
            }

            @Override
            public void onItemLongClick(int position, View v) {
                Log.d("long click", "onItemLongClick pos = " + position);

                FragmentTransaction transaction = getSupportFragmentManager().beginTransaction();

                // we already have a message fragment showing.
                if (getSupportFragmentManager().getBackStackEntryCount() > 0)
                    return;

                // create a new fragment and update with data
                HeaderFragment whatsappFragment = new HeaderFragment();
                Bundle args = new Bundle();

                // generate message
                StringBuilder sb = new StringBuilder();
                String line = "\n----------\n";
                Message msg = mMessages.get(position);
                sb.append("Message generated by SelfChat, " + msg.getTimeStamp());
                sb.append(line);
                sb.append("Sent from: " + msg.getName());
                sb.append(line);
                sb.append("Text: " + msg.getText());

                args.putString(HeaderFragment.INPUT_TEXT, sb.toString());
                args.putInt(HeaderFragment.REMOVE_POS, position);
                whatsappFragment.setArguments(args);

                // save new fragment
                transaction.replace(R.id.fragment_container, whatsappFragment);

                // save the initial fragment to return
                transaction.addToBackStack(null);

                // Commit the transaction
                transaction.commit();
            }
        });
    }

    public void removeMessage(int id) {
        mMessages.remove(id);
        mAdapter.notifyDataSetChanged();
    }

//    @Override
//    public void onBackPressed() {
//        if (exit) {
//            finish(); // finish activity
//        } else {
//            Toast.makeText(this, "Press Back again to Exit.",
//                    Toast.LENGTH_SHORT).show();
//            exit = true;
//            new Handler().postDelayed(new Runnable() {
//                @Override
//                public void run() {
//                    exit = false;
//                }
//            }, 3 * 1000);
//        }
//    }
}